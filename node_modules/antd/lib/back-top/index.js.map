{"version":3,"sources":["back-top/index.jsx"],"names":["getDefaultTarget","window","BackTop","props","getCurrentScrollTop","getTarget","target","targetNode","pageYOffset","document","body","scrollTop","documentElement","scrollToTop","e","getContainer","onClick","handleScroll","visibilityHeight","setState","visible","renderBackTop","getPrefixCls","customizePrefixCls","prefixCls","className","children","classString","defaultElement","divProps","state","backTopBtn","scrollEvent","remove","value","React","Component","defaultProps"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Animate from 'rc-animate';\nimport addEventListener from 'rc-util/lib/Dom/addEventListener';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\nimport getScroll from '../_util/getScroll';\nimport scrollTo from '../_util/scrollTo';\nfunction getDefaultTarget() {\n    return window;\n}\nexport default class BackTop extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getCurrentScrollTop = () => {\n            const getTarget = this.props.target || getDefaultTarget;\n            const targetNode = getTarget();\n            if (targetNode === window) {\n                return window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop;\n            }\n            return targetNode.scrollTop;\n        };\n        this.scrollToTop = (e) => {\n            const { target = getDefaultTarget } = this.props;\n            scrollTo(0, {\n                getContainer: target,\n            });\n            if (typeof this.props.onClick === 'function') {\n                this.props.onClick(e);\n            }\n        };\n        this.handleScroll = () => {\n            const { visibilityHeight, target = getDefaultTarget } = this.props;\n            const scrollTop = getScroll(target(), true);\n            this.setState({\n                visible: scrollTop > visibilityHeight,\n            });\n        };\n        this.renderBackTop = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className = '', children } = this.props;\n            const prefixCls = getPrefixCls('back-top', customizePrefixCls);\n            const classString = classNames(prefixCls, className);\n            const defaultElement = (<div className={`${prefixCls}-content`}>\n        <div className={`${prefixCls}-icon`}/>\n      </div>);\n            // fix https://fb.me/react-unknown-prop\n            const divProps = omit(this.props, [\n                'prefixCls',\n                'className',\n                'children',\n                'visibilityHeight',\n                'target',\n                'visible',\n            ]);\n            const visible = 'visible' in this.props ? this.props.visible : this.state.visible;\n            const backTopBtn = visible ? (<div {...divProps} className={classString} onClick={this.scrollToTop}>\n        {children || defaultElement}\n      </div>) : null;\n            return (<Animate component=\"\" transitionName=\"fade\">\n        {backTopBtn}\n      </Animate>);\n        };\n        this.state = {\n            visible: false,\n        };\n    }\n    componentDidMount() {\n        const getTarget = this.props.target || getDefaultTarget;\n        this.scrollEvent = addEventListener(getTarget(), 'scroll', this.handleScroll);\n        this.handleScroll();\n    }\n    componentWillUnmount() {\n        if (this.scrollEvent) {\n            this.scrollEvent.remove();\n        }\n    }\n    setScrollTop(value) {\n        const getTarget = this.props.target || getDefaultTarget;\n        const targetNode = getTarget();\n        if (targetNode === window) {\n            document.body.scrollTop = value;\n            document.documentElement.scrollTop = value;\n        }\n        else {\n            targetNode.scrollTop = value;\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderBackTop}</ConfigConsumer>;\n    }\n}\nBackTop.defaultProps = {\n    visibilityHeight: 400,\n};\n"],"file":"index.js"}