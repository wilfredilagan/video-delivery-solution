{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport dateutil from '../dateutil';\nimport { empty, repeat, pymod, includes } from '../helpers';\nimport { M365MASK, MDAY365MASK, NMDAY365MASK, WDAYMASK, M365RANGE, M366MASK, MDAY366MASK, NMDAY366MASK, M366RANGE } from '../masks';\nexport function rebuildYear(year, options) {\n  var firstyday = new Date(Date.UTC(year, 0, 1));\n  var yearlen = dateutil.isLeapYear(year) ? 366 : 365;\n  var nextyearlen = dateutil.isLeapYear(year + 1) ? 366 : 365;\n  var yearordinal = dateutil.toOrdinal(firstyday);\n  var yearweekday = dateutil.getWeekday(firstyday);\n\n  var result = tslib_1.__assign({\n    yearlen: yearlen,\n    nextyearlen: nextyearlen,\n    yearordinal: yearordinal,\n    yearweekday: yearweekday\n  }, baseYearMasks(year), {\n    wnomask: null\n  });\n\n  if (empty(options.byweekno)) {\n    return result;\n  }\n\n  result.wnomask = repeat(0, yearlen + 7);\n  var firstwkst;\n  var wyearlen;\n  var no1wkst = firstwkst = pymod(7 - yearweekday + options.wkst, 7);\n\n  if (no1wkst >= 4) {\n    no1wkst = 0; // Number of days in the year, plus the days we got\n    // from last year.\n\n    wyearlen = result.yearlen + pymod(yearweekday - options.wkst, 7);\n  } else {\n    // Number of days in the year, minus the days we\n    // left in last year.\n    wyearlen = yearlen - no1wkst;\n  }\n\n  var div = Math.floor(wyearlen / 7);\n  var mod = pymod(wyearlen, 7);\n  var numweeks = Math.floor(div + mod / 4);\n\n  for (var j = 0; j < options.byweekno.length; j++) {\n    var n = options.byweekno[j];\n\n    if (n < 0) {\n      n += numweeks + 1;\n    }\n\n    if (!(n > 0 && n <= numweeks)) {\n      continue;\n    }\n\n    var i = void 0;\n\n    if (n > 1) {\n      i = no1wkst + (n - 1) * 7;\n\n      if (no1wkst !== firstwkst) {\n        i -= 7 - firstwkst;\n      }\n    } else {\n      i = no1wkst;\n    }\n\n    for (var k = 0; k < 7; k++) {\n      result.wnomask[i] = 1;\n      i++;\n      if (result.wdaymask[i] === options.wkst) break;\n    }\n  }\n\n  if (includes(options.byweekno, 1)) {\n    // Check week number 1 of next year as well\n    // orig-TODO : Check -numweeks for next year.\n    var i = no1wkst + numweeks * 7;\n    if (no1wkst !== firstwkst) i -= 7 - firstwkst;\n\n    if (i < yearlen) {\n      // If week starts in next year, we\n      // don't care about it.\n      for (var j = 0; j < 7; j++) {\n        result.wnomask[i] = 1;\n        i += 1;\n        if (result.wdaymask[i] === options.wkst) break;\n      }\n    }\n  }\n\n  if (no1wkst) {\n    // Check last week number of last year as\n    // well. If no1wkst is 0, either the year\n    // started on week start, or week number 1\n    // got days from last year, so there are no\n    // days from last year's last week number in\n    // this year.\n    var lnumweeks = void 0;\n\n    if (!includes(options.byweekno, -1)) {\n      var lyearweekday = dateutil.getWeekday(new Date(Date.UTC(year - 1, 0, 1)));\n      var lno1wkst = pymod(7 - lyearweekday.valueOf() + options.wkst, 7);\n      var lyearlen = dateutil.isLeapYear(year - 1) ? 366 : 365;\n      var weekst = void 0;\n\n      if (lno1wkst >= 4) {\n        lno1wkst = 0;\n        weekst = lyearlen + pymod(lyearweekday - options.wkst, 7);\n      } else {\n        weekst = yearlen - no1wkst;\n      }\n\n      lnumweeks = Math.floor(52 + pymod(weekst, 7) / 4);\n    } else {\n      lnumweeks = -1;\n    }\n\n    if (includes(options.byweekno, lnumweeks)) {\n      for (var i = 0; i < no1wkst; i++) result.wnomask[i] = 1;\n    }\n  }\n\n  return result;\n}\n\nfunction baseYearMasks(year) {\n  var yearlen = dateutil.isLeapYear(year) ? 366 : 365;\n  var firstyday = new Date(Date.UTC(year, 0, 1));\n  var wday = dateutil.getWeekday(firstyday);\n\n  if (yearlen === 365) {\n    return {\n      mmask: M365MASK,\n      mdaymask: MDAY365MASK,\n      nmdaymask: NMDAY365MASK,\n      wdaymask: WDAYMASK.slice(wday),\n      mrange: M365RANGE\n    };\n  }\n\n  return {\n    mmask: M366MASK,\n    mdaymask: MDAY366MASK,\n    nmdaymask: NMDAY366MASK,\n    wdaymask: WDAYMASK.slice(wday),\n    mrange: M366RANGE\n  };\n}","map":null,"metadata":{},"sourceType":"module"}