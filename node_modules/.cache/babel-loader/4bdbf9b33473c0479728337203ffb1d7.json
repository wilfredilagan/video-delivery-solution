{"ast":null,"code":"import dateutil from '../dateutil';\nimport { notEmpty, repeat, range, isPresent } from '../helpers';\nimport { Frequency } from '../types';\nimport { rebuildYear } from './yearinfo';\nimport { rebuildMonth } from './monthinfo';\nimport { easter } from './easter';\nimport { Time } from '../datetime'; // =============================================================================\n// Iterinfo\n// =============================================================================\n\nvar Iterinfo =\n/** @class */\nfunction () {\n  function Iterinfo(options) {\n    this.options = options;\n  }\n\n  Iterinfo.prototype.rebuild = function (year, month) {\n    var options = this.options;\n\n    if (year !== this.lastyear) {\n      this.yearinfo = rebuildYear(year, options);\n    }\n\n    if (notEmpty(options.bynweekday) && (month !== this.lastmonth || year !== this.lastyear)) {\n      var _a = this.yearinfo,\n          yearlen = _a.yearlen,\n          mrange = _a.mrange,\n          wdaymask = _a.wdaymask;\n      this.monthinfo = rebuildMonth(year, month, yearlen, mrange, wdaymask, options);\n    }\n\n    if (isPresent(options.byeaster)) {\n      this.eastermask = easter(year, options.byeaster);\n    }\n  };\n\n  Object.defineProperty(Iterinfo.prototype, \"lastyear\", {\n    get: function () {\n      return this.monthinfo ? this.monthinfo.lastyear : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"lastmonth\", {\n    get: function () {\n      return this.monthinfo ? this.monthinfo.lastmonth : null;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"yearlen\", {\n    get: function () {\n      return this.yearinfo.yearlen;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"yearordinal\", {\n    get: function () {\n      return this.yearinfo.yearordinal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"mrange\", {\n    get: function () {\n      return this.yearinfo.mrange;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"wdaymask\", {\n    get: function () {\n      return this.yearinfo.wdaymask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"mmask\", {\n    get: function () {\n      return this.yearinfo.mmask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"wnomask\", {\n    get: function () {\n      return this.yearinfo.wnomask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"nwdaymask\", {\n    get: function () {\n      return this.monthinfo ? this.monthinfo.nwdaymask : [];\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"nextyearlen\", {\n    get: function () {\n      return this.yearinfo.nextyearlen;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"mdaymask\", {\n    get: function () {\n      return this.yearinfo.mdaymask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Iterinfo.prototype, \"nmdaymask\", {\n    get: function () {\n      return this.yearinfo.nmdaymask;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  Iterinfo.prototype.ydayset = function () {\n    return [range(this.yearlen), 0, this.yearlen];\n  };\n\n  Iterinfo.prototype.mdayset = function (_, month, __) {\n    var start = this.mrange[month - 1];\n    var end = this.mrange[month];\n    var set = repeat(null, this.yearlen);\n\n    for (var i = start; i < end; i++) set[i] = i;\n\n    return [set, start, end];\n  };\n\n  Iterinfo.prototype.wdayset = function (year, month, day) {\n    // We need to handle cross-year weeks here.\n    var set = repeat(null, this.yearlen + 7);\n    var i = dateutil.toOrdinal(new Date(Date.UTC(year, month - 1, day))) - this.yearordinal;\n    var start = i;\n\n    for (var j = 0; j < 7; j++) {\n      set[i] = i;\n      ++i;\n      if (this.wdaymask[i] === this.options.wkst) break;\n    }\n\n    return [set, start, i];\n  };\n\n  Iterinfo.prototype.ddayset = function (year, month, day) {\n    var set = repeat(null, this.yearlen);\n    var i = dateutil.toOrdinal(new Date(Date.UTC(year, month - 1, day))) - this.yearordinal;\n    set[i] = i;\n    return [set, i, i + 1];\n  };\n\n  Iterinfo.prototype.htimeset = function (hour, _, second, millisecond) {\n    var _this = this;\n\n    var set = [];\n    this.options.byminute.forEach(function (minute) {\n      set = set.concat(_this.mtimeset(hour, minute, second, millisecond));\n    });\n    dateutil.sort(set);\n    return set;\n  };\n\n  Iterinfo.prototype.mtimeset = function (hour, minute, _, millisecond) {\n    var set = this.options.bysecond.map(function (second) {\n      return new Time(hour, minute, second, millisecond);\n    });\n    dateutil.sort(set);\n    return set;\n  };\n\n  Iterinfo.prototype.stimeset = function (hour, minute, second, millisecond) {\n    return [new Time(hour, minute, second, millisecond)];\n  };\n\n  Iterinfo.prototype.getdayset = function (freq) {\n    switch (freq) {\n      case Frequency.YEARLY:\n        return this.ydayset.bind(this);\n\n      case Frequency.MONTHLY:\n        return this.mdayset.bind(this);\n\n      case Frequency.WEEKLY:\n        return this.wdayset.bind(this);\n\n      case Frequency.DAILY:\n        return this.ddayset.bind(this);\n\n      default:\n        return this.ddayset.bind(this);\n    }\n  };\n\n  Iterinfo.prototype.gettimeset = function (freq) {\n    switch (freq) {\n      case Frequency.HOURLY:\n        return this.htimeset.bind(this);\n\n      case Frequency.MINUTELY:\n        return this.mtimeset.bind(this);\n\n      case Frequency.SECONDLY:\n        return this.stimeset.bind(this);\n    }\n  };\n\n  return Iterinfo;\n}();\n\nexport default Iterinfo;","map":null,"metadata":{},"sourceType":"module"}