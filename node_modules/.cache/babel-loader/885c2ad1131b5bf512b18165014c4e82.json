{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DemoData = exports.AddMorePopover = exports.DnDContext = exports.DnDSource = exports.SummaryPos = exports.CellUnits = exports.ViewTypes = exports.SchedulerData = exports.DATETIME_FORMAT = exports.DATE_FORMAT = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _class, _temp, _initialiseProps; // Col, Row and Icon do not have their own less files for styling. They use \n// rules declared in antd's global css. If these styles are imported directly\n// from within antd, they'll include, for instance, reset rules. These will\n// affect everything on the page and in essence would leak antd's global styles\n// into all projects using this library. Instead of doing that, we are using\n// a hack which allows us to wrap all antd styles to target specific root. In\n// this case the root id will be \"RBS-Scheduler-root\". This way the reset styles\n// won't be applied to elements declared outside of <Scheduler /> component.\n//\n// You can get more context for the issue by reading:\n// https://github.com/ant-design/ant-design/issues/4331\n// The solution is based on:\n// https://github.com/ant-design/ant-design/issues/4331#issuecomment-391066131\n// \n// For development\n// This fix is implemented with webpack's NormalModuleReplacementPlugin in\n// webpack/webpack-dev.config.js.\n//\n// For library builds\n// This fix is implemented by the build script in scripts/build.js\n//\n// The next components have their own specific stylesheets which we import\n// separately here to avoid importing from files which have required the global\n// antd styles.\n\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _col = require('antd/lib/col');\n\nvar _col2 = _interopRequireDefault(_col);\n\nvar _row = require('antd/lib/row');\n\nvar _row2 = _interopRequireDefault(_row);\n\nvar _icon = require('antd/lib/icon');\n\nvar _icon2 = _interopRequireDefault(_icon);\n\nrequire('antd/lib/select/style/index.css');\n\nrequire('antd/lib/grid/style/index.css');\n\nvar _radio = require('antd/lib/radio');\n\nvar _radio2 = _interopRequireDefault(_radio);\n\nrequire('antd/lib/radio/style/index.css');\n\nvar _popover = require('antd/lib/popover');\n\nvar _popover2 = _interopRequireDefault(_popover);\n\nrequire('antd/lib/popover/style/index.css');\n\nvar _calendar = require('antd/lib/calendar');\n\nvar _calendar2 = _interopRequireDefault(_calendar);\n\nrequire('antd/lib/calendar/style/index.css');\n\nvar _EventItem = require('./EventItem');\n\nvar _EventItem2 = _interopRequireDefault(_EventItem);\n\nvar _DnDSource = require('./DnDSource');\n\nvar _DnDSource2 = _interopRequireDefault(_DnDSource);\n\nvar _DnDContext = require('./DnDContext');\n\nvar _DnDContext2 = _interopRequireDefault(_DnDContext);\n\nvar _ResourceView = require('./ResourceView');\n\nvar _ResourceView2 = _interopRequireDefault(_ResourceView);\n\nvar _HeaderView = require('./HeaderView');\n\nvar _HeaderView2 = _interopRequireDefault(_HeaderView);\n\nvar _BodyView = require('./BodyView');\n\nvar _BodyView2 = _interopRequireDefault(_BodyView);\n\nvar _ResourceEvents = require('./ResourceEvents');\n\nvar _ResourceEvents2 = _interopRequireDefault(_ResourceEvents);\n\nvar _AgendaView = require('./AgendaView');\n\nvar _AgendaView2 = _interopRequireDefault(_AgendaView);\n\nvar _AddMorePopover = require('./AddMorePopover');\n\nvar _AddMorePopover2 = _interopRequireDefault(_AddMorePopover);\n\nvar _ViewTypes = require('./ViewTypes');\n\nvar _ViewTypes2 = _interopRequireDefault(_ViewTypes);\n\nvar _CellUnits = require('./CellUnits');\n\nvar _CellUnits2 = _interopRequireDefault(_CellUnits);\n\nvar _SummaryPos = require('./SummaryPos');\n\nvar _SummaryPos2 = _interopRequireDefault(_SummaryPos);\n\nvar _SchedulerData = require('./SchedulerData');\n\nvar _SchedulerData2 = _interopRequireDefault(_SchedulerData);\n\nvar _DemoData = require('./DemoData');\n\nvar _DemoData2 = _interopRequireDefault(_DemoData);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar RadioButton = _radio2.default.Button;\nvar RadioGroup = _radio2.default.Group;\nvar Scheduler = (_temp = _class = function (_Component) {\n  _inherits(Scheduler, _Component);\n\n  function Scheduler(props) {\n    _classCallCheck(this, Scheduler);\n\n    var _this = _possibleConstructorReturn(this, (Scheduler.__proto__ || Object.getPrototypeOf(Scheduler)).call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var schedulerData = props.schedulerData,\n        dndSources = props.dndSources;\n    var sources = [];\n    sources.push(new _DnDSource2.default(function (props) {\n      return props.eventItem;\n    }, _EventItem2.default));\n\n    if (dndSources != undefined && dndSources.length > 0) {\n      sources = [].concat(_toConsumableArray(sources), _toConsumableArray(dndSources));\n    }\n\n    var dndContext = new _DnDContext2.default(sources, _ResourceEvents2.default);\n    _this.currentArea = -1;\n\n    schedulerData._setDocumentWidth(document.documentElement.clientWidth);\n\n    _this.state = {\n      visible: false,\n      dndContext: dndContext,\n      contentHeight: schedulerData.getSchedulerContentDesiredHeight(),\n      contentScrollbarHeight: 17,\n      contentScrollbarWidth: 17,\n      resourceScrollbarHeight: 17,\n      resourceScrollbarWidth: 17,\n      scrollLeft: 0,\n      scrollTop: 0,\n      documentWidth: document.documentElement.clientWidth,\n      documentHeight: document.documentElement.clientHeight\n    };\n    if (schedulerData.isSchedulerResponsive()) window.onresize = _this.onWindowResize;\n    return _this;\n  }\n\n  _createClass(Scheduler, [{\n    key: 'componentDidMount',\n    value: function componentDidMount(props, state) {\n      this.resolveScrollbarSize();\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(props, state) {\n      this.resolveScrollbarSize();\n      var schedulerData = this.props.schedulerData;\n      var localeMoment = schedulerData.localeMoment,\n          behaviors = schedulerData.behaviors;\n\n      if (schedulerData.getScrollToSpecialMoment() && !!behaviors.getScrollSpecialMomentFunc) {\n        if (!!this.schedulerContent && this.schedulerContent.scrollWidth > this.schedulerContent.clientWidth) {\n          var start = localeMoment(schedulerData.startDate).startOf('day'),\n              end = localeMoment(schedulerData.endDate).endOf('day'),\n              specialMoment = behaviors.getScrollSpecialMomentFunc(schedulerData, start, end);\n\n          if (specialMoment >= start && specialMoment <= end) {\n            var index = 0;\n            schedulerData.headers.forEach(function (item) {\n              var header = localeMoment(item.time);\n              if (specialMoment >= header) index++;\n            });\n            this.schedulerContent.scrollLeft = (index - 1) * schedulerData.getContentCellWidth();\n            schedulerData.setScrollToSpecialMoment(false);\n          }\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _props = this.props,\n          schedulerData = _props.schedulerData,\n          leftCustomHeader = _props.leftCustomHeader,\n          rightCustomHeader = _props.rightCustomHeader;\n      var renderData = schedulerData.renderData,\n          viewType = schedulerData.viewType,\n          showAgenda = schedulerData.showAgenda,\n          isEventPerspective = schedulerData.isEventPerspective,\n          config = schedulerData.config;\n      var width = schedulerData.getSchedulerWidth();\n      var calendarPopoverEnabled = config.calendarPopoverEnabled;\n      var dateLabel = schedulerData.getDateLabel();\n      var defaultValue = '' + viewType + (showAgenda ? 1 : 0) + (isEventPerspective ? 1 : 0);\n      var radioButtonList = config.views.map(function (item) {\n        return _react2.default.createElement(RadioButton, {\n          key: '' + item.viewType + (item.showAgenda ? 1 : 0) + (item.isEventPerspective ? 1 : 0),\n          value: '' + item.viewType + (item.showAgenda ? 1 : 0) + (item.isEventPerspective ? 1 : 0)\n        }, _react2.default.createElement('span', {\n          style: {\n            margin: \"0px 8px\"\n          }\n        }, item.viewName));\n      });\n\n      var tbodyContent = _react2.default.createElement('tr', null);\n\n      if (showAgenda) {\n        tbodyContent = _react2.default.createElement(_AgendaView2.default, this.props);\n      } else {\n        var resourceTableWidth = schedulerData.getResourceTableWidth();\n        var schedulerContainerWidth = width - resourceTableWidth + 1;\n        var schedulerWidth = schedulerData.getContentTableWidth() - 1;\n        var DndResourceEvents = this.state.dndContext.getDropTarget();\n        var eventDndSource = this.state.dndContext.getDndSource();\n        var displayRenderData = renderData.filter(function (o) {\n          return o.render;\n        });\n        var resourceEventsList = displayRenderData.map(function (item) {\n          return _react2.default.createElement(DndResourceEvents, _extends({}, _this2.props, {\n            key: item.slotId,\n            resourceEvents: item,\n            dndSource: eventDndSource\n          }));\n        });\n        var contentScrollbarHeight = this.state.contentScrollbarHeight,\n            contentScrollbarWidth = this.state.contentScrollbarWidth,\n            resourceScrollbarHeight = this.state.resourceScrollbarHeight,\n            resourceScrollbarWidth = this.state.resourceScrollbarWidth,\n            contentHeight = this.state.contentHeight;\n        var resourcePaddingBottom = resourceScrollbarHeight === 0 ? contentScrollbarHeight : 0;\n        var contentPaddingBottom = contentScrollbarHeight === 0 ? resourceScrollbarHeight : 0;\n        var schedulerContentStyle = {\n          overflow: 'auto',\n          margin: \"0px\",\n          position: \"relative\",\n          paddingBottom: contentPaddingBottom\n        };\n        var resourceContentStyle = {\n          overflowX: \"auto\",\n          overflowY: \"auto\",\n          width: resourceTableWidth + resourceScrollbarWidth - 2,\n          margin: '0px -' + contentScrollbarWidth + 'px 0px 0px'\n        };\n\n        if (config.schedulerMaxHeight > 0) {\n          schedulerContentStyle = _extends({}, schedulerContentStyle, {\n            maxHeight: config.schedulerMaxHeight - config.tableHeaderHeight\n          });\n          resourceContentStyle = _extends({}, resourceContentStyle, {\n            maxHeight: config.schedulerMaxHeight - config.tableHeaderHeight\n          });\n        }\n\n        var resourceName = schedulerData.isEventPerspective ? config.taskName : config.resourceName;\n        tbodyContent = _react2.default.createElement('tr', null, _react2.default.createElement('td', {\n          style: {\n            width: resourceTableWidth,\n            verticalAlign: 'top'\n          }\n        }, _react2.default.createElement('div', {\n          className: 'resource-view'\n        }, _react2.default.createElement('div', {\n          style: {\n            overflow: \"hidden\",\n            borderBottom: \"1px solid #e9e9e9\",\n            height: config.tableHeaderHeight\n          }\n        }, _react2.default.createElement('div', {\n          style: {\n            overflowX: \"scroll\",\n            overflowY: \"hidden\",\n            margin: '0px 0px -' + contentScrollbarHeight + 'px'\n          }\n        }, _react2.default.createElement('table', {\n          className: 'resource-table'\n        }, _react2.default.createElement('thead', null, _react2.default.createElement('tr', {\n          style: {\n            height: config.tableHeaderHeight\n          }\n        }, _react2.default.createElement('th', {\n          className: 'header3-text'\n        }, resourceName)))))), _react2.default.createElement('div', {\n          style: resourceContentStyle,\n          ref: this.schedulerResourceRef,\n          onMouseOver: this.onSchedulerResourceMouseOver,\n          onMouseOut: this.onSchedulerResourceMouseOut,\n          onScroll: this.onSchedulerResourceScroll\n        }, _react2.default.createElement(_ResourceView2.default, _extends({}, this.props, {\n          contentScrollbarHeight: resourcePaddingBottom\n        }))))), _react2.default.createElement('td', null, _react2.default.createElement('div', {\n          className: 'scheduler-view',\n          style: {\n            width: schedulerContainerWidth,\n            verticalAlign: 'top'\n          }\n        }, _react2.default.createElement('div', {\n          style: {\n            overflow: \"hidden\",\n            borderBottom: \"1px solid #e9e9e9\",\n            height: config.tableHeaderHeight\n          }\n        }, _react2.default.createElement('div', {\n          style: {\n            overflowX: \"scroll\",\n            overflowY: \"hidden\",\n            margin: '0px 0px -' + contentScrollbarHeight + 'px'\n          },\n          ref: this.schedulerHeadRef,\n          onMouseOver: this.onSchedulerHeadMouseOver,\n          onMouseOut: this.onSchedulerHeadMouseOut,\n          onScroll: this.onSchedulerHeadScroll\n        }, _react2.default.createElement('div', {\n          style: {\n            paddingRight: contentScrollbarWidth + 'px',\n            width: schedulerWidth + contentScrollbarWidth\n          }\n        }, _react2.default.createElement('table', {\n          className: 'scheduler-bg-table'\n        }, _react2.default.createElement(_HeaderView2.default, this.props))))), _react2.default.createElement('div', {\n          style: schedulerContentStyle,\n          ref: this.schedulerContentRef,\n          onMouseOver: this.onSchedulerContentMouseOver,\n          onMouseOut: this.onSchedulerContentMouseOut,\n          onScroll: this.onSchedulerContentScroll\n        }, _react2.default.createElement('div', {\n          style: {\n            width: schedulerWidth,\n            height: contentHeight\n          }\n        }, _react2.default.createElement('div', {\n          className: 'scheduler-content'\n        }, _react2.default.createElement('table', {\n          className: 'scheduler-content-table'\n        }, _react2.default.createElement('tbody', null, resourceEventsList))), _react2.default.createElement('div', {\n          className: 'scheduler-bg'\n        }, _react2.default.createElement('table', {\n          className: 'scheduler-bg-table',\n          style: {\n            width: schedulerWidth\n          },\n          ref: this.schedulerContentBgTableRef\n        }, _react2.default.createElement(_BodyView2.default, this.props))))))));\n      }\n\n      ;\n\n      var popover = _react2.default.createElement('div', {\n        className: 'popover-calendar'\n      }, _react2.default.createElement(_calendar2.default, {\n        fullscreen: false,\n        onSelect: this.onSelect\n      }));\n\n      var schedulerHeader = _react2.default.createElement('div', null);\n\n      if (config.headerEnabled) {\n        schedulerHeader = _react2.default.createElement(_row2.default, {\n          type: 'flex',\n          align: 'middle',\n          justify: 'space-between',\n          style: {\n            marginBottom: '24px'\n          }\n        }, leftCustomHeader, _react2.default.createElement(_col2.default, null, _react2.default.createElement('div', {\n          className: 'header2-text'\n        }, _react2.default.createElement(_icon2.default, {\n          type: 'left',\n          style: {\n            marginRight: \"8px\"\n          },\n          className: 'icon-nav',\n          onClick: this.goBack\n        }), calendarPopoverEnabled ? _react2.default.createElement(_popover2.default, {\n          content: popover,\n          placement: 'bottom',\n          trigger: 'click',\n          visible: this.state.visible,\n          onVisibleChange: this.handleVisibleChange\n        }, _react2.default.createElement('span', {\n          className: 'header2-text-label',\n          style: {\n            cursor: 'pointer'\n          }\n        }, dateLabel)) : _react2.default.createElement('span', {\n          className: 'header2-text-label'\n        }, dateLabel), _react2.default.createElement(_icon2.default, {\n          type: 'right',\n          style: {\n            marginLeft: \"8px\"\n          },\n          className: 'icon-nav',\n          onClick: this.goNext\n        }))), _react2.default.createElement(_col2.default, null, _react2.default.createElement(RadioGroup, {\n          defaultValue: defaultValue,\n          size: 'default',\n          onChange: this.onViewChange\n        }, radioButtonList)), rightCustomHeader);\n      }\n\n      return _react2.default.createElement('table', {\n        id: 'RBS-Scheduler-root',\n        className: 'scheduler',\n        style: {\n          width: width + 'px'\n        }\n      }, _react2.default.createElement('thead', null, _react2.default.createElement('tr', null, _react2.default.createElement('td', {\n        colSpan: '2'\n      }, schedulerHeader))), _react2.default.createElement('tbody', null, tbodyContent));\n    }\n  }]);\n\n  return Scheduler;\n}(_react.Component), _class.propTypes = {\n  schedulerData: _propTypes.PropTypes.object.isRequired,\n  prevClick: _propTypes.PropTypes.func.isRequired,\n  nextClick: _propTypes.PropTypes.func.isRequired,\n  onViewChange: _propTypes.PropTypes.func.isRequired,\n  onSelectDate: _propTypes.PropTypes.func.isRequired,\n  onSetAddMoreState: _propTypes.PropTypes.func,\n  updateEventStart: _propTypes.PropTypes.func,\n  updateEventEnd: _propTypes.PropTypes.func,\n  moveEvent: _propTypes.PropTypes.func,\n  movingEvent: _propTypes.PropTypes.func,\n  leftCustomHeader: _propTypes.PropTypes.object,\n  rightCustomHeader: _propTypes.PropTypes.object,\n  newEvent: _propTypes.PropTypes.func,\n  subtitleGetter: _propTypes.PropTypes.func,\n  eventItemClick: _propTypes.PropTypes.func,\n  viewEventClick: _propTypes.PropTypes.func,\n  viewEventText: _propTypes.PropTypes.string,\n  viewEvent2Click: _propTypes.PropTypes.func,\n  viewEvent2Text: _propTypes.PropTypes.string,\n  conflictOccurred: _propTypes.PropTypes.func,\n  eventItemTemplateResolver: _propTypes.PropTypes.func,\n  dndSources: _propTypes.PropTypes.array,\n  slotClickedFunc: _propTypes.PropTypes.func,\n  toggleExpandFunc: _propTypes.PropTypes.func,\n  slotItemTemplateResolver: _propTypes.PropTypes.func,\n  nonAgendaCellHeaderTemplateResolver: _propTypes.PropTypes.func,\n  onScrollLeft: _propTypes.PropTypes.func,\n  onScrollRight: _propTypes.PropTypes.func,\n  onScrollTop: _propTypes.PropTypes.func,\n  onScrollBottom: _propTypes.PropTypes.func\n}, _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.onWindowResize = function (e) {\n    var schedulerData = _this3.props.schedulerData;\n\n    schedulerData._setDocumentWidth(document.documentElement.clientWidth);\n\n    _this3.setState({\n      documentWidth: document.documentElement.clientWidth,\n      documentHeight: document.documentElement.clientHeight\n    });\n  };\n\n  this.resolveScrollbarSize = function () {\n    var schedulerData = _this3.props.schedulerData;\n    var contentScrollbarHeight = 17,\n        contentScrollbarWidth = 17,\n        resourceScrollbarHeight = 17,\n        resourceScrollbarWidth = 17,\n        contentHeight = schedulerData.getSchedulerContentDesiredHeight();\n\n    if (!!_this3.schedulerContent) {\n      contentScrollbarHeight = _this3.schedulerContent.offsetHeight - _this3.schedulerContent.clientHeight;\n      contentScrollbarWidth = _this3.schedulerContent.offsetWidth - _this3.schedulerContent.clientWidth;\n    }\n\n    if (!!_this3.schedulerResource) {\n      resourceScrollbarHeight = _this3.schedulerResource.offsetHeight - _this3.schedulerResource.clientHeight;\n      resourceScrollbarWidth = _this3.schedulerResource.offsetWidth - _this3.schedulerResource.clientWidth;\n    }\n\n    if (!!_this3.schedulerContentBgTable && !!_this3.schedulerContentBgTable.offsetHeight) {\n      contentHeight = _this3.schedulerContentBgTable.offsetHeight;\n    }\n\n    var tmpState = {};\n    var needSet = false;\n\n    if (contentScrollbarHeight != _this3.state.contentScrollbarHeight) {\n      tmpState = _extends({}, tmpState, {\n        contentScrollbarHeight: contentScrollbarHeight\n      });\n      needSet = true;\n    }\n\n    if (contentScrollbarWidth != _this3.state.contentScrollbarWidth) {\n      tmpState = _extends({}, tmpState, {\n        contentScrollbarWidth: contentScrollbarWidth\n      });\n      needSet = true;\n    }\n\n    if (contentHeight != _this3.state.contentHeight) {\n      tmpState = _extends({}, tmpState, {\n        contentHeight: contentHeight\n      });\n      needSet = true;\n    }\n\n    if (resourceScrollbarHeight != _this3.state.resourceScrollbarHeight) {\n      tmpState = _extends({}, tmpState, {\n        resourceScrollbarHeight: resourceScrollbarHeight\n      });\n      needSet = true;\n    }\n\n    if (resourceScrollbarWidth != _this3.state.resourceScrollbarWidth) {\n      tmpState = _extends({}, tmpState, {\n        resourceScrollbarWidth: resourceScrollbarWidth\n      });\n      needSet = true;\n    }\n\n    if (needSet) _this3.setState(tmpState);\n  };\n\n  this.schedulerHeadRef = function (element) {\n    _this3.schedulerHead = element;\n  };\n\n  this.onSchedulerHeadMouseOver = function () {\n    _this3.currentArea = 2;\n  };\n\n  this.onSchedulerHeadMouseOut = function () {\n    _this3.currentArea = -1;\n  };\n\n  this.onSchedulerHeadScroll = function (proxy, event) {\n    if ((_this3.currentArea === 2 || _this3.currentArea === -1) && _this3.schedulerContent.scrollLeft != _this3.schedulerHead.scrollLeft) _this3.schedulerContent.scrollLeft = _this3.schedulerHead.scrollLeft;\n  };\n\n  this.schedulerResourceRef = function (element) {\n    _this3.schedulerResource = element;\n  };\n\n  this.onSchedulerResourceMouseOver = function () {\n    _this3.currentArea = 1;\n  };\n\n  this.onSchedulerResourceMouseOut = function () {\n    _this3.currentArea = -1;\n  };\n\n  this.onSchedulerResourceScroll = function (proxy, event) {\n    if ((_this3.currentArea === 1 || _this3.currentArea === -1) && _this3.schedulerContent.scrollTop != _this3.schedulerResource.scrollTop) _this3.schedulerContent.scrollTop = _this3.schedulerResource.scrollTop;\n  };\n\n  this.schedulerContentRef = function (element) {\n    _this3.schedulerContent = element;\n  };\n\n  this.schedulerContentBgTableRef = function (element) {\n    _this3.schedulerContentBgTable = element;\n  };\n\n  this.onSchedulerContentMouseOver = function () {\n    _this3.currentArea = 0;\n  };\n\n  this.onSchedulerContentMouseOut = function () {\n    _this3.currentArea = -1;\n  };\n\n  this.onSchedulerContentScroll = function (proxy, event) {\n    if (_this3.currentArea === 0 || _this3.currentArea === -1) {\n      if (_this3.schedulerHead.scrollLeft != _this3.schedulerContent.scrollLeft) _this3.schedulerHead.scrollLeft = _this3.schedulerContent.scrollLeft;\n      if (_this3.schedulerResource.scrollTop != _this3.schedulerContent.scrollTop) _this3.schedulerResource.scrollTop = _this3.schedulerContent.scrollTop;\n    }\n\n    var _props2 = _this3.props,\n        schedulerData = _props2.schedulerData,\n        onScrollLeft = _props2.onScrollLeft,\n        onScrollRight = _props2.onScrollRight,\n        onScrollTop = _props2.onScrollTop,\n        onScrollBottom = _props2.onScrollBottom;\n    var _state = _this3.state,\n        scrollLeft = _state.scrollLeft,\n        scrollTop = _state.scrollTop;\n\n    if (_this3.schedulerContent.scrollLeft !== scrollLeft) {\n      if (_this3.schedulerContent.scrollLeft === 0 && onScrollLeft != undefined) {\n        onScrollLeft(schedulerData, _this3.schedulerContent, _this3.schedulerContent.scrollWidth - _this3.schedulerContent.clientWidth);\n      }\n\n      if (_this3.schedulerContent.scrollLeft === _this3.schedulerContent.scrollWidth - _this3.schedulerContent.clientWidth && onScrollRight != undefined) {\n        onScrollRight(schedulerData, _this3.schedulerContent, _this3.schedulerContent.scrollWidth - _this3.schedulerContent.clientWidth);\n      }\n    } else if (_this3.schedulerContent.scrollTop !== scrollTop) {\n      if (_this3.schedulerContent.scrollTop === 0 && onScrollTop != undefined) {\n        onScrollTop(schedulerData, _this3.schedulerContent, _this3.schedulerContent.scrollHeight - _this3.schedulerContent.clientHeight);\n      }\n\n      if (_this3.schedulerContent.scrollTop === _this3.schedulerContent.scrollHeight - _this3.schedulerContent.clientHeight && onScrollBottom != undefined) {\n        onScrollBottom(schedulerData, _this3.schedulerContent, _this3.schedulerContent.scrollHeight - _this3.schedulerContent.clientHeight);\n      }\n    }\n\n    _this3.setState({\n      scrollLeft: _this3.schedulerContent.scrollLeft,\n      scrollTop: _this3.schedulerContent.scrollTop\n    });\n  };\n\n  this.onViewChange = function (e) {\n    var _props3 = _this3.props,\n        onViewChange = _props3.onViewChange,\n        schedulerData = _props3.schedulerData;\n    var viewType = parseInt(e.target.value.charAt(0));\n    var showAgenda = e.target.value.charAt(1) === '1';\n    var isEventPerspective = e.target.value.charAt(2) === '1';\n    onViewChange(schedulerData, {\n      viewType: viewType,\n      showAgenda: showAgenda,\n      isEventPerspective: isEventPerspective\n    });\n  };\n\n  this.goNext = function () {\n    var _props4 = _this3.props,\n        nextClick = _props4.nextClick,\n        schedulerData = _props4.schedulerData;\n    nextClick(schedulerData);\n  };\n\n  this.goBack = function () {\n    var _props5 = _this3.props,\n        prevClick = _props5.prevClick,\n        schedulerData = _props5.schedulerData;\n    prevClick(schedulerData);\n  };\n\n  this.handleVisibleChange = function (visible) {\n    _this3.setState({\n      visible: visible\n    });\n  };\n\n  this.onSelect = function (date) {\n    _this3.setState({\n      visible: false\n    });\n\n    var _props6 = _this3.props,\n        onSelectDate = _props6.onSelectDate,\n        schedulerData = _props6.schedulerData;\n    onSelectDate(schedulerData, date);\n  };\n}, _temp);\nvar DATE_FORMAT = exports.DATE_FORMAT = 'YYYY-MM-DD';\nvar DATETIME_FORMAT = exports.DATETIME_FORMAT = 'YYYY-MM-DD HH:mm:ss';\nexports.SchedulerData = _SchedulerData2.default;\nexports.ViewTypes = _ViewTypes2.default;\nexports.CellUnits = _CellUnits2.default;\nexports.SummaryPos = _SummaryPos2.default;\nexports.DnDSource = _DnDSource2.default;\nexports.DnDContext = _DnDContext2.default;\nexports.AddMorePopover = _AddMorePopover2.default;\nexports.DemoData = _DemoData2.default;\nexports.default = Scheduler; // this line has been added by scripts/build.js\n\nrequire('./css/antd-globals-hiding-hack.css');","map":null,"metadata":{},"sourceType":"script"}