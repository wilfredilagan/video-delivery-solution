{"ast":null,"code":"import * as tslib_1 from \"tslib\";\nimport IterResult from './iterresult';\n/**\n * IterResult subclass that calls a callback function on each add,\n * and stops iterating when the callback returns false.\n */\n\nvar CallbackIterResult =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(CallbackIterResult, _super);\n\n  function CallbackIterResult(method, args, iterator) {\n    var _this = _super.call(this, method, args) || this;\n\n    _this.iterator = iterator;\n    return _this;\n  }\n\n  CallbackIterResult.prototype.add = function (date) {\n    if (this.iterator(date, this._result.length)) {\n      this._result.push(date);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  return CallbackIterResult;\n}(IterResult);\n\nexport default CallbackIterResult;","map":null,"metadata":{},"sourceType":"module"}